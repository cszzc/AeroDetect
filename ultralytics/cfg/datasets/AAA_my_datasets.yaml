# Set the path to your local VisDrone2019 dataset
path: /root/autodl-tmp/ultralytics-mainPro/visdrone/  # 修改为你本地数据集的路径

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
train: VisDrone2019-DET-train/images  # 训练集图片路径，相对于 'path'
val: VisDrone2019-DET-val/images      # 验证集图片路径，相对于 'path'
test: VisDrone2019-DET-test-dev/images # 测试集图片路径，相对于 'path'

# Classes
names:
  0: pedestrian
  1: people
  2: bicycle
  3: car
  4: van
  5: truck
  6: tricycle
  7: awning-tricycle
  8: bus
  9: motor

# Download script/URL (optional) ---------------------------------------------------------------------------------------
download: |
  import os
  from pathlib import Path

  from ultralytics.utils.downloads import download

  def visdrone2yolo(dir):
      from PIL import Image
      from tqdm import tqdm

      def convert_box(size, box):
          # Convert VisDrone box to YOLO xywh box
          dw = 1. / size[0]
          dh = 1. / size[1]
          return (box[0] + box[2] / 2) * dw, (box[1] + box[3] / 2) * dh, box[2] * dw, box[3] * dh

      (dir / 'labels').mkdir(parents=True, exist_ok=True)  # create labels directory
      pbar = tqdm((dir / 'annotations').glob('*.txt'), desc=f'Converting {dir}')
      for f in pbar:
          img_size = Image.open((dir / 'images' / f.name).with_suffix('.jpg')).size
          lines = []
          with open(f, 'r') as file:  # read annotation.txt
              for row in [x.split(',') for x in file.read().strip().splitlines()]:
                  if row[4] == '0':  # VisDrone 'ignored regions' class 0
                      continue
                  cls = int(row[5]) - 1  # Adjust class index to YOLO format
                  box = convert_box(img_size, tuple(map(int, row[:4])))  # Convert bounding box
                  lines.append(f"{cls} {' '.join(f'{x:.6f}' for x in box)}\n")
          
          # Save YOLO labels in the 'labels' folder
          with open(str(f).replace(f'{os.sep}annotations{os.sep}', f'{os.sep}labels{os.sep}'), 'w') as fl:
              fl.writelines(lines)  # write label.txt

  # Convert the annotations from VisDrone to YOLO format (no need to download)
  dir = Path('/home/user/VisDrone2019')  # Your dataset directory
  for d in 'VisDrone2019-DET-train', 'VisDrone2019-DET-val', 'VisDrone2019-DET-test-dev':
      visdrone2yolo(dir / d)  # Convert VisDrone annotations to YOLO labels
